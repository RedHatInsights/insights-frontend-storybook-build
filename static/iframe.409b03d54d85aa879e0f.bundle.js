(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1082:function(e,n,t){var o=t(1083);"string"==typeof o&&(o=[[e.i,o,""]]);var a={hmr:!0,transform:void 0};t(10)(o,a);o.locals&&(e.exports=o.locals)},1083:function(e,n,t){(n=e.exports=t(8)(void 0)).i(t(1084),""),n.i(t(1149),""),n.push([e.i,':root {\n  --ins-color--orange: #ec7a08; }\n\na {\n  color: initial; }\n\n.pf-c-button + .pf-c-button {\n  margin-left: 5px; }\n\n.wrapper {\n  display: none; }\n\n.story-header {\n  border-bottom: 1px solid #eaeaea;\n  padding-bottom: 15px;\n  margin-bottom: 15px; }\n  .story-header div {\n    display: flex;\n    flex-direction: column; }\n\n.story-title {\n  font-size: 35px; }\n\n.story-subtitle {\n  font-size: 20px; }\n\n.chapter-header {\n  font-size: 18px;\n  margin-top: 15px; }\n\n.chapter-subtitle {\n  display: block;\n  margin-bottom: 15px; }\n  .chapter-subtitle + hr {\n    display: none; }\n\n.section-container {\n  display: inline-block;\n  width: 100%;\n  padding: 20px 15px 15px 15px;\n  margin: 15px 0;\n  border: 1px solid #eaeaea;\n  position: relative; }\n\n.section-header {\n  position: absolute;\n  top: -10px;\n  left: 5px;\n  background: #fff;\n  display: inline-block;\n  padding: 0 10px; }\n\n.section-button-container {\n  position: absolute;\n  top: -15px;\n  right: 15px; }\n  .section-button-container button {\n    background-color: #fff !important; }\n  .section-button-container button.button-active {\n    background-color: var(--pf-global--info-color--100) !important;\n    color: #fff !important; }\n\n.section-subsection {\n  margin-top: 20px; }\n\n.section-subsection .section-subsection-title {\n  font-weight: 700; }\n\n.section-subsection table.propTable {\n  text-align: left;\n  line-height: 40px;\n  border-collapse: separate;\n  border-spacing: 0;\n  width: 75%;\n  margin: 15px 0;\n  border-radius: .25rem; }\n  .section-subsection table.propTable td, .section-subsection table.propTable th {\n    padding: 0 30px; }\n  .section-subsection table.propTable thead {\n    background: #fafafa; }\n\nul li {\n  list-style-type: disc; }\n  ul li ul li {\n    list-style-type: circle; }\n\n.markdown-body h1 {\n  display: block; }\n\n.section-component-container section[class^="ins-l-"], .section-component-container section[class^="ins-l-"] > * {\n  border: 1px dashed; }\n\n.badge-wrapper > a {\n  text-decoration: underline;\n  color: #007bba; }\n\n.ins-c-gauge {\n  display: flex;\n  justify-content: center; }\n\n.ins-matrix-chart {\n  display: flex;\n  justify-content: center; }\n  .ins-matrix-chart svg {\n    overflow: visible; }\n\nnav.sidenav {\n  width: min-content; }\n\nhtml, body {\n  display: block !important; }\n\n#root {\n  background: #fff !important; }\n\nul.navigation {\n  background: #fff; }\n\n.pf-c-vertical-nav__item, .navigation-secondary li {\n  list-style-type: none; }\n\n.pf-m-dark {\n  background: #1A1A1A;\n  color: white;\n  padding: 15px; }\n\n.pf-l-page__main-section.pf-m-dark:first-of-type {\n  background: #353535; }\n  .pf-l-page__main-section.pf-m-dark:first-of-type h1 {\n    color: white; }\n\n.pf-u-screen-reader {\n  display: none; }\n\n.skeleton-container * + * {\n  margin-top: 15px; }\n',""])},1150:function(e,n,t){var o={"./chrome.stories.js":1151};function a(e){var n=i(e);return t(n)}function i(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=1150},1151:function(e,n,t){"use strict";t.r(n),function(e){var n=t(13),o=t(833),a=t.n(o),i=t(9);Object(n.storiesOf)("Chrome",e).add("Chrome",Object(i.doc)(a.a))}.call(this,t(41)(e))},1166:function(e,n,t){var o={"./ansible.stories.js":1167,"./battery.stories.js":1172,"./main.stories.js":1173,"./pageHeader.stories.js":1174,"./reboot.stories.js":1175,"./section.stories.js":1176,"./skeleton.stories.js":1177,"./spinner.stories.js":1178,"./tableToolbar.stories.js":1179,"./wizard.stories.js":1190};function a(e){var n=i(e);return t(n)}function i(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=1166},1167:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(7),r=t(6),s=t(834),l=t.n(s),c=t(9);Object(a.storiesOf)("Components",e).addDecorator(Object(c.withReadme)(l.a)).addDecorator(i.withKnobs).addWithChapters("Ansible Icon",{chapters:[{title:"Demo",subtitle:'Use the "Knobs" tab in the addon panel to use interactive preview',sections:[{title:"Interactive Preview",sectionFn:function(){return o.a.createElement(r.Ansible,{unsupported:Object(i.boolean)("unsupported",!1)})}}]}]})}.call(this,t(41)(e))},1172:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(7),r=t(6),s=t(835),l=t.n(s),c=t(9);Object(a.storiesOf)("Components",e).addDecorator(Object(c.withReadme)(l.a)).addDecorator(i.withKnobs).addWithChapters("Battery",{chapters:[{title:"Demo",subtitle:'Use the "Knobs" tab in the addon panel to use interactive preview',sections:[{title:"Interactive Preview",sectionFn:function(){var e=Object(i.text)("Label","Hello World!");return o.a.createElement(r.Battery,{severity:"critical",label:e,labelHidden:Object(i.boolean)("Hidden",!1)})}}]},{title:"Severities",subtitle:"Can either be a string or a number",sections:[{title:"Critical",sectionFn:function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(r.Battery,{severity:"critical",label:"Severity as `critical` string"}),o.a.createElement(r.Battery,{severity:4,label:"Severity as {4}"}))}},{title:"High",sectionFn:function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(r.Battery,{severity:"high",label:"Severity as `high` string"}),o.a.createElement(r.Battery,{severity:"error",label:"Severity as `error` string"}),o.a.createElement(r.Battery,{severity:3,label:"Severity as {3}"}))}},{title:"Medium",sectionFn:function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(r.Battery,{severity:"medium",label:"Severity as `medium` string"}),o.a.createElement(r.Battery,{severity:"warn",label:"Severity as `warn` string"}),o.a.createElement(r.Battery,{severity:2,label:"Severity as {2}"}))}},{title:"Low",sectionFn:function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(r.Battery,{severity:"low",label:"Severity as `low` string"}),o.a.createElement(r.Battery,{severity:"info",label:"Severity as `info` string"}),o.a.createElement(r.Battery,{severity:1,label:"Severity as {1}"}))}}]}]})}.call(this,t(41)(e))},1173:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(7),r=t(6),s=t(836),l=t.n(s),c=t(9);Object(a.storiesOf)("Components",e).addDecorator(Object(c.withReadme)(l.a)).addDecorator(i.withKnobs).addWithChapters("Main",{chapters:[{title:"Main",sections:[{title:"Interactive Preview",sectionFn:function(){return o.a.createElement(r.Main,null,o.a.createElement("p",null,"This is the main content of the page"))}}]}]})}.call(this,t(41)(e))},1174:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(7),r=t(6),s=t(837),l=t.n(s),c=t(9);Object(a.storiesOf)("Components",e).addDecorator(Object(c.withReadme)(l.a)).addDecorator(i.withKnobs).addWithChapters("Page Header",{chapters:[{title:"Demo",subtitle:'Use the "Knobs" tab in the addon panel to use interactive preview',sections:[{title:"Interactive Preview",sectionFn:function(){var e=Object(i.text)("Label","Hello World!");return o.a.createElement(r.PageHeader,null,o.a.createElement(r.PageHeaderTitle,{title:e}))}}]}]})}.call(this,t(41)(e))},1175:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(7),r=t(6),s=t(838),l=t.n(s),c=t(9);Object(a.storiesOf)("Components",e).addDecorator(Object(c.withReadme)(l.a)).addDecorator(i.withKnobs).addWithChapters("Reboot Icon",{chapters:[{title:"Demo",subtitle:'Use the "Knobs" tab in the addon panel to use interactive preview',sections:[{title:"Interactive Preview",sectionFn:function(){return o.a.createElement(r.Reboot,{red:Object(i.boolean)("red",!1)})}}]}]})}.call(this,t(41)(e))},1176:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(6),r=t(144),s=t(839),l=t.n(s),c=t(9);Object(a.storiesOf)("Components",e).addDecorator(Object(c.withReadme)(l.a)).addWithChapters("Section",{chapters:[{title:"There are multiple ways to display layouts",sections:[{title:"Content",sectionFn:function(){return o.a.createElement(i.Section,{type:"content"},o.a.createElement("p",null," Content "))}},{title:"Button Group",sectionFn:function(){return o.a.createElement(i.Section,{type:"button-group"},o.a.createElement(r.c,null," Content "),o.a.createElement(r.c,null," Content "),o.a.createElement(r.c,null," Content "))}},{title:"Icon Group",sectionFn:function(){return o.a.createElement(i.Section,{type:"icon-group"},o.a.createElement(i.Battery,{severity:"critical",label:"First"}),o.a.createElement(i.Battery,{severity:"medium",label:"Second"}),o.a.createElement(i.Battery,{severity:"low",label:"Third"}))}},{title:"Icon Group with distinguished value",sectionFn:function(){return o.a.createElement(i.Section,{type:"icon-group__with-major"},o.a.createElement(i.Battery,{severity:"critical",label:"First"}),o.a.createElement(i.Battery,{severity:"medium",label:"Second"}),o.a.createElement(i.Battery,{severity:"low",label:"Third"}),o.a.createElement(i.Battery,{severity:"high",label:"This is the distinguished value"}))}}]}]})}.call(this,t(41)(e))},1177:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(6),r=t(840),s=t.n(r),l=t(9);Object(a.storiesOf)("Components",e).addDecorator(Object(l.withReadme)(s.a)).addWithChapters("Skeleton",{chapters:[{title:"Demo",subtitle:"Different Sized Skeletons",sections:[{title:"Interactive Preview",sectionFn:function(){return o.a.createElement("div",{className:"skeleton-container"},o.a.createElement(i.Skeleton,{size:"xs"}),o.a.createElement(i.Skeleton,{size:"sm"}),o.a.createElement(i.Skeleton,{size:"md"}),o.a.createElement(i.Skeleton,{size:"lg"}))}}]}]})}.call(this,t(41)(e))},1178:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(7),r=t(6),s=t(841),l=t.n(s),c=t(9);Object(a.storiesOf)("Components",e).addDecorator(Object(c.withReadme)(l.a)).addDecorator(i.withKnobs).addWithChapters("Spinner",{chapters:[{title:"Demo",subtitle:'Use the "Knobs" tab in the addon panel to use interactive preview',sections:[{title:"Interactive Preview",sectionFn:function(){return o.a.createElement(r.Spinner,{centered:Object(i.boolean)("centered",!1)})}}]}]})}.call(this,t(41)(e))},1179:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(7),r=t(6),s=t(281),l=t(1771),c=t(1772),p=t(842),d=t.n(p),h=t(9);Object(a.storiesOf)("Components",e).addDecorator(Object(h.withReadme)(d.a)).addDecorator(i.withKnobs).addWithChapters("Table Toolbar",{chapters:[{title:"Demo to be used above the <Table> component",subtitle:'Use the "Knobs" tab in the addon panel to use interactive preview',sections:[{title:"Interactive Preview",sectionFn:function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(r.TableToolbar,{results:Object(i.number)("Results",0)},"Whatever content you want inside the toolbar (search, buttons, etc)"),o.a.createElement(s.b,{cells:["Column 1","Column 2"],rows:[["1","2"],["1","2"]]},o.a.createElement(l.a,null),o.a.createElement(c.a,null)))}}]}]})}.call(this,t(41)(e))},1190:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(653),r=t(7),s=t(6),l=t(144),c=t(843),p=t.n(c),d=t(9),h=t(844),u=t(845),m=t(846),b=t(847),g=new i.Store({isModalOpen:!1});Object(a.storiesOf)("Components",e).addDecorator(Object(d.withReadme)(p.a)).addDecorator(Object(i.StateDecorator)(g)).addDecorator(r.withKnobs).addWithChapters("Wizard",{chapters:[{title:"There are multiple ways to display layouts",sections:[{title:"Content",sectionFn:function(){var e=[o.a.createElement(h.a,null),o.a.createElement(u.a,null),o.a.createElement(m.a,null),o.a.createElement(b.a,null)];return o.a.createElement(o.a.Fragment,null,o.a.createElement(l.c,{variant:"primary",onClick:function(){return g.set({isModalOpen:!g.get("isModalOpen")})}}," Open Wizard "),o.a.createElement(s.Wizard,{isLarge:Object(r.boolean)("Large",!0),title:"Wizard Example",className:"ins-c-wizard-example",onClose:function(){return g.set({isModalOpen:!g.get("isModalOpen")})},isOpen:g.get("isModalOpen"),content:e}))}}]}]})}.call(this,t(41)(e))},1195:function(e,n,t){var o=t(1196);"string"==typeof o&&(o=[[e.i,o,""]]);var a={hmr:!0,transform:void 0};t(10)(o,a);o.locals&&(e.exports=o.locals)},1196:function(e,n,t){(n=e.exports=t(8)(void 0)).i(t(1197),""),n.i(t(1198),""),n.i(t(1199),""),n.push([e.i,".ins-c-wizard-example .pf-c-form__group {\n  margin-top: 15px;\n  margin-top: 0.9375rem; }\n\n.ins-c-wizard-example .example-wizard__step-2 .pf-c-form__group {\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  grid-column-gap: 30px;\n  grid-column-gap: 1.875rem;\n  grid-row-gap: 15px;\n  grid-row-gap: 0.9375rem; }\n\n.sizedWizard * + * {\n  margin-top: 15px;\n  margin-top: 0.9375rem; }\n",""])},1200:function(e,n,t){var o={"./redux.stories.js":1201};function a(e){var n=i(e);return t(n)}function i(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=1200},1201:function(e,n,t){"use strict";t.r(n),function(e){var n=t(13),o=t(9),a=t(848),i=t.n(a);Object(n.storiesOf)("Redux",e).add("Overview",Object(o.doc)(i.a))}.call(this,t(41)(e))},1202:function(e,n,t){var o={"./repos.stories.js":1203};function a(e){var n=i(e);return t(n)}function i(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=1202},1203:function(e,n,t){"use strict";t.r(n),function(e){var n=t(13),o=t(849),a=t.n(o),i=t(850),r=t.n(i),s=t(851),l=t.n(s),c=t(852),p=t.n(c),d=t(853),h=t.n(d),u=t(9);Object(n.storiesOf)("Repos",e).add("Chrome",Object(u.doc)(a.a)).add("Proxy",Object(u.doc)(r.a)).add("Starter App",Object(u.doc)(l.a)).add("Apps",Object(u.doc)(h.a)).add("Deployments",Object(u.doc)(p.a))}.call(this,t(41)(e))},1204:function(e,n,t){var o={"./welcome.stories.js":1205};function a(e){var n=i(e);return t(n)}function i(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=1204},1205:function(e,n,t){"use strict";t.r(n),function(e){var n=t(13),o=t(9),a=t(854),i=t.n(a),r=t(855),s=t.n(r),l=t(856),c=t.n(l);Object(n.storiesOf)("Welcome",e).addDecorator(Object(o.withReadme)(s.a)).add("Getting Started",Object(o.doc)(i.a)).add("Quick Start Guide",Object(o.doc)(c.a))}.call(this,t(41)(e))},1206:function(e,n,t){var o={"./donut.stories.js":1207,"./gauge.stories.js":1208,"./matrix.stories.js":1209,"./pie.stories.js":1210};function a(e){var n=i(e);return t(n)}function i(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=1206},1207:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(7),r=t(342),s=t(209),l=t(6),c=t(857),p=t.n(c),d=t(9);Object(a.storiesOf)("Charts",e).addDecorator(Object(d.withReadme)(p.a)).addDecorator(i.withKnobs).addWithChapters("Donut",{chapters:[{title:"Demo",subtitle:'Use the "Knobs" tab in the addon panel to use interactive preview',sections:[{title:"Preview",sectionFn:function(){var e=Object(i.text)("Donut Hole Label","issues"),n=[["Value1",Object(i.number)("Value1",10)],["Value2",Object(i.number)("Value2",10)],["Value3",Object(i.number)("Value3",10)],["Value4",Object(i.number)("Value4",10)]],t=Object(i.select)("Legend Position",{right:"right",left:"left",top:"top",bottom:"bottom"},"bottom");return o.a.createElement(l.Donut,{values:n,totalLabel:e,identifier:"storybook-donut--withDemo",withLegend:!0,legendPosition:t})}}]},{title:"Donut",sections:[{title:"Preview",sectionFn:function(){return o.a.createElement(l.Donut,{values:[["value1",5],["value2",10],["value3",20],["value4",40]],totalLabel:"issues",identifier:"storybook-donut"})}}]},{title:"Donut with Legend",sections:[{title:"Preview",sectionFn:function(){return o.a.createElement(l.Donut,{values:[["value1",5],["value2",10],["value3",20],["value4",40]],totalLabel:"issues",identifier:"storybook-donut--withLegend",withLegend:!0})}}]},{title:"Donut with Legend and Links",sections:[{title:"Preview",sectionFn:function(){return o.a.createElement(r.a,null,o.a.createElement(s.a,{path:"/"},o.a.createElement(l.Donut,{values:[["value1",5],["value2",10],["value3",20],["value4",40]],link:"#",totalLabel:"issues",identifier:"storybook-donut--withLegend-Link",withLegend:!0})))}}]}]})}.call(this,t(41)(e))},1208:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(7),r=t(6),s=t(858),l=t.n(s),c=t(9);Object(a.storiesOf)("Charts",e).addDecorator(Object(c.withReadme)(l.a)).addDecorator(i.withKnobs).addWithChapters("Gauge",{chapters:[{title:"Demo",subtitle:'Use the "Knobs" tab in the addon panel to use interactive preview',sections:[{title:"Preview",sectionFn:function(){return o.a.createElement(r.Gauge,{flipFullColors:Object(i.boolean)("Flip Colors",!1),identifier:"sample-gauge",label:"sample-gauge",height:250,value:Object(i.number)("Value",10,{range:!0,min:0,max:100,step:1})})}}]}]})}.call(this,t(41)(e))},1209:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(7),r=t(6),s=t(859),l=t.n(s),c=t(9);Object(a.storiesOf)("Charts",e).addDecorator(Object(c.withReadme)(l.a)).addDecorator(i.withKnobs).addWithChapters("Matrix",{chapters:[{title:"Demo",subtitle:'Use the "Knobs" tab in the addon panel to use interactive preview',sections:[{title:"Preview",sectionFn:function(){var e={range:!0,min:0,max:4,step:1},n={yLabel:Object(i.text)("Y Axis Main Label","Y main label"),xLabel:Object(i.text)("X Axis Main Label","X main label"),subLabels:{xLabels:[Object(i.text)("X Axis Sub Label 1","x sub label 1"),Object(i.text)("X Axis Sub Label 2","x sub label 2")],yLabels:[Object(i.text)("Y Axis Sub Label 1","y sub label 1"),Object(i.text)("Y Axis Sub Label 2","y sub label 2")]}},t={topRight:[{position:[Object(i.number)("topRight Y",2,e),Object(i.number)("topRight X",2,e)],label:"First"}],topLeft:[{position:[Object(i.number)("topLeft Y",2,e),Object(i.number)("topLeft X",2,e)],label:"Second"}],bottomRight:[{position:[Object(i.number)("bottomRight Y",2,e),Object(i.number)("bottomRight X",2,e)],label:"Third"}],bottomLeft:[{position:[Object(i.number)("bottomLeft Y",2,e),Object(i.number)("bottomLeft X",2,e)],label:"Fourth"}]};return o.a.createElement(r.Matrix,{data:t,labels:n})}}]}]})}.call(this,t(41)(e))},1210:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(13),i=t(7),r=t(342),s=t(209),l=t(6),c=t(860),p=t.n(c),d=t(9);Object(a.storiesOf)("Charts",e).addDecorator(Object(d.withReadme)(p.a)).addDecorator(i.withKnobs).addWithChapters("Pie",{chapters:[{title:"Demo",subtitle:'Use the "Knobs" tab in the addon panel to use interactive preview',sections:[{title:"Preview",sectionFn:function(){var e=[["Value1",Object(i.number)("Value1",10)],["Value2",Object(i.number)("Value2",10)],["Value3",Object(i.number)("Value3",10)],["Value4",Object(i.number)("Value4",10)]],n=Object(i.select)("Legend Position",{right:"right",left:"left",top:"top",bottom:"bottom"},"bottom");return o.a.createElement(l.Pie,{values:e,identifier:"storybook-pie--withDemo",withLegend:!0,legendPosition:n})}}]},{title:"Pie",sections:[{title:"Preview",sectionFn:function(){return o.a.createElement(l.Pie,{values:[["value1",5],["value2",10],["value3",20],["value4",40]],totalLabel:"issues",identifier:"storybook-pie"})}}]},{title:"Pie with Legend",sections:[{title:"Preview",sectionFn:function(){return o.a.createElement(l.Pie,{values:[["value1",5],["value2",10],["value3",20],["value4",40]],totalLabel:"issues",identifier:"storybook-pie--withLegend",withLegend:!0})}}]},{title:"Pie with Legend and Links",sections:[{title:"Preview",sectionFn:function(){return o.a.createElement(r.a,null,o.a.createElement(s.a,{path:"/"},o.a.createElement(l.Pie,{values:[["value1",5],["value2",10],["value3",20],["value4",40]],link:"#",totalLabel:"issues",identifier:"storybook-pie--withLegend-Link",withLegend:!0})))}}]}]})}.call(this,t(41)(e))},1211:function(e,n,t){var o={"./deployments.stories.js":1212};function a(e){var n=i(e);return t(n)}function i(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=1211},1212:function(e,n,t){"use strict";t.r(n),function(e){var n=t(13),o=t(9),a=t(861),i=t.n(a),r=t(862),s=t.n(r);Object(n.storiesOf)("Deployments",e).add("Overview",Object(o.doc)(i.a)).add("Setup",Object(o.doc)(s.a))}.call(this,t(41)(e))},1213:function(e,n,t){var o={"./uxd.stories.js":1214};function a(e){var n=i(e);return t(n)}function i(e){var n=o[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=1213},1214:function(e,n,t){"use strict";t.r(n),function(e){var n=t(13),o=t(9),a=t(863),i=t.n(a),r=t(864),s=t.n(r),l=t(865),c=t.n(l),p=t(866),d=t.n(p),h=t(867),u=t.n(h),m=t(868),b=t.n(m);Object(n.storiesOf)("UX",e).addDecorator(Object(o.withReadme)(s.a)).add("Alerts & notifications",Object(o.doc)(c.a)).add("Empty states",Object(o.doc)(b.a)).add("Language",Object(o.doc)(d.a)).add("Loading states",Object(o.doc)(i.a)).add("Toolbars & filters",Object(o.doc)(u.a))}.call(this,t(41)(e))},827:function(e,n,t){"use strict";t.d(n,"a",function(){return i});var o=t(6),a=t(869);function i(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];return Object(o.getRegistry)({},[Object(a.a)()].concat(n))}},833:function(e,n){e.exports="# Insights Chrome\n\nInsights Chrome provides a header, footer and primary navigation to all Insights Platform applications.\n\n## Javascript API\n\nInsights Chrome comes with a Javacript API that allows applications to control navigation, global filters, etc.\n\n```js\n\nclass App extends Component {\n\n    componentDidMount () {\n        insights.chrome.init();\n        // TODO change this to your appname\n        insights.chrome.identifyApp('insights');\n    }\n\n    render () {\n        return (\n            <Routes childProps={ this.props } />\n        );\n    }\n}\n\nApp.propTypes = {\n    history: PropTypes.object\n};\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter (connect()(App));\n```\n\nInsights Chrome relays a static navigation\n\nIf you would like to add/remove sub navigation items that are present in the global nav, open a PR in [Insights Chrome](https://github.com/RedHatInsights/insights-chrome)\n"},834:function(e,n){e.exports="# Ansible Icon\n\nImplementation of 'ansible' icon that represent levels of severity.\n\n## Usage\n\nImport Ansible and styles from this package.\n\n```JSX\nimport React from 'react';\nimport { Ansible } from '@red-hat-insights/insights-frontent-components/';\n\nclass YourCmp extends React.Component {\n  render() {\n    return (\n        { /* Default is true*/ }\n        <Ansible/>\n\n        { /* Unsupported */ }\n        <Ansible unsupported/>\n    )\n  }\n}\n```\n\n## Props\n\nAnsible\n\n```javascript\n{\n    unsupported: propTypes.bool\n};\n```"},835:function(e,n){e.exports="# Battery\n\nImplementation of 'battery' icons that represent levels of severity.\n\nLater it will be possible to filter trough options, right now only button is rendered and clicking on it will reveal clickable item list.\n\n## Usage\n\nImport Battery, its font and styles from this package.\n\n```JSX\nimport React from 'react';\nimport { Battery } from '@red-hat-insights/insights-frontent-components/';\n\nclass YourCmp extends React.Component {\n  render() {\n    return (\n        <Section type='icon-group'>\n            { /* Low/1 Severity */ }\n            <Battery label='test' severity='low'/>\n            <Battery label='test' severity='info'/>\n            <Battery label='test' severity={1}/>\n            { /* Medium/2 Severity */ }\n            <Battery label='test' severity='medium'/>\n            <Battery label='test' severity='warn'/>\n            <Battery label='test' severity={2}/>\n            { /* High/3 Severity */ }\n            <Battery label='test' severity='high'/>\n            <Battery label='test' severity='error'/>\n            <Battery label='test' severity={3}/>\n            { /* Critical/4 Severity */ }\n            <Battery label='test' severity='critical'/>\n            <Battery label='test' severity={4}/>\n\n            { /* Hidden Label */ }\n            <Battery label='test' labelHidden severity='critical'/>\n        </Section>\n    )\n  }\n}\n```\n\n## Props\n\nBattery\n\n```javascript\n{\n    severity: propTypes.oneOfType([\n        propTypes.string.isRequired,\n        propTypes.number.isRequired\n    ]),\n    label: propTypes.string.isRequired,\n    labelHidden: propTypes.bool\n};\n```"},836:function(e,n){e.exports="# Main\n\nThis component will allow you to wrap the main content in appropriate tags\n\n## Usage\n\n```javascript\n\nimport { Main } from '@red-hat-insights/insights-frontend-components/components/Main';\n\nconst MyCmp = () => (\n    <Main> {content} </Main>\n)\n```\n\n## Use with PageHeader to make a page\n\n```javascript\nimport { Main } from '@red-hat-insights/insights-frontend-components/components/Main';\nimport { PageHeader } from '@red-hat-insights/insights-frontend-components/components/PageHeader';\nimport { PageHeaderTitle } from '@red-hat-insights/insights-frontend-components/components/PageHeader';\n\nconst MyCmp = () => (\n    <React.Fragment>\n        <PageHeader>\n            <PageHeaderTitle title='Title'/>\n        </PageHeader>\n        <Main>\n            { content }\n        </Main>\n    </React.Fragment>\n)\n\n```\n\n## Props\n\n### Main props\n\n```javascript\n{\n    className: propTypes.string,\n    children: propTypes.any.isRequired,\n}\n```"},837:function(e,n){e.exports="# PageHeader\n\nThis component will allow you to make headers for each page\n\n## Usage\n\nImport PageHeader component and its styles.\nHTML `input`.\n\n```javascript\n\nimport { PageHeader } from '@red-hat-insights/insights-frontend-components/components/PageHeader';\nimport '@red-hat-insights/insights-frontend-components/components/PageHeader.css'\nimport React from 'react';\n\nconst MyCmp = () => (\n    <PageHeader> {content} </PageHeader>\n)\n\n```\n\n## Use with PageHeaderTitle\n\nCreates a text header inside of PageHeader\n\nImport PageHeader, PageHeaderTitle component and their styles.\nHTML `input`.\n\n```javascript\n\nimport { PageHeader } from '@red-hat-insights/insights-frontend-components/components/PageHeader';\nimport { PageHeaderTitle } from '@red-hat-insights/insights-frontend-components/components/PageHeader';\n\n// PageHeaderTitle styles are located in PageHeader.css\nimport '@red-hat-insights/insights-frontend-components/components/PageHeader.css'\nimport React from 'react';\n\nconst MyCmp = () => (\n    <PageHeader>\n        <PageHeaderTitle title='Title'/>\n    </PageHeader>\n)\n\n```\n\n## Props\n\n### PageHeader props\n\n```javascript\n{\n  children: PropTypes.node\n}\n```\n\n### PageHeaderTitle\n\n```javascript\n\n{\n  title: PropTypes.string\n}\n```"},838:function(e,n){e.exports="# Reboot\n\nImplementation of 'reboot' icon with a label\n\n## Usage\n\nImport Reboot and styles from this package.\n\n```JSX\nimport React from 'react';\nimport { Reboot } from '@redhat-insights/insights-frontent-components/';\n\nclass YourCmp extends React.Component {\n  render() {\n    return (\n        <Reboot/>\n\n        // if you want it to be red:\n        <Reboot red/>\n    )\n  }\n}\n```\n\n## Props\n\nReboot\n\n```javascript\n{\n    className: propTypes.string\n    red: propTypes.string\n};\n```"},839:function(e,n){e.exports="# Section\n\nThis component will allow you to use `ins-l-` prefixes for layout classes\n\n## Usage\n\nImport Section component and its styles.\n\n### Current Classes\n\n`type='content'` = `ins-l-content`\n\n`type='button-group'` = `ins-l-button-group`\n\n`type='icon-group'` = `ins-l-icon-group`\n\n`type='icon-group__with-major'` = `ins-l-icon-group__with-major`\n\n```javascript\n\nimport { Section } from '@red-hat-insights/insights-frontend-components/components/Section';\nimport '@red-hat-insights/insights-frontend-components/components/Section.css'\nimport React from 'react';\n\nconst MyCmp = () => (\n    <Section type='content'> {children} </PageHeader>\n)\n\n```\n\n## Props\n\n```javascript\n\n{\n  type: PropTypes.string,\n  children: PropTypes.node\n}\n```"},840:function(e,n){e.exports="# Skeleton\n\nImplementation of the Skeleton component, which is a loader for content\n\n## Usage\n\n### Async Component\n\nImport Skeleton from this package in a file where you load your component. In this case, we're using the default asyncComponent to make a Card Skeleton.\n\n#### CardSkeletonExample.js\n\n```JSX\nimport React, { Component } from 'react';\n\nimport { Card, CardHeader, CardBody, CardFooter } from '@patternfly/react-core';\nimport { Skeleton } from '@red-hat-insights/insights-frontend-components';\n\nexport default function CardSkeletonExample(importComponent) {\n    class CardSkeletonExample extends Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                component: null\n            };\n        }\n\n        async componentDidMount() {\n            const { default: component } = await importComponent();\n\n            this.setState({\n                component\n            });\n        }\n\n        render() {\n            const C = this.state.component;\n\n            return C ? <C { ...this.props } /> :\n                <Card className='ins-c-foo-card ins-c-card__skeleton'>\n                    <CardHeader>\n                        <Skeleton size='md'/>\n                    </CardHeader>\n                    <CardBody>\n                        <Skeleton size='lg'/>\n                    </CardBody>\n                    <CardFooter>\n                        <Skeleton size='sm'/>\n                    </CardFooter>\n                </Card>;\n        }\n    }\n\n    return CardSkeletonExample;\n}\n```\n\n### Main file\n\n#### Main.js\n\n```JSX\nimport React from 'react';\n\n// Import the async component you made above\nimport CardSkeletonExample from '../../Utilities/CardSkeletonExample.js';\n\n// Import Actual Card using the CardSkeletonExample async component\nconst FinalCard = CardSkeletonExample(() => import('../../PresentationalComponents/Cards/FinalCard.js'));\n\nclass YourCmp extends React.Component {\n\n    render() {\n        return (\n            // Your card will be rendered with the async component. When it loads on the page, you will get the skeleton.\n            // When <FinalCard> actually mounts, the component will switch from the skeleton to the final version.\n            <FinalCard/>\n        );\n    }\n}\n```\n\n## Props\n\nSkeleton\n\n```javascript\n{\n    className: PropTypes.string,\n    size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg'])\n};\n```"},841:function(e,n){e.exports="# Spinner\n\nThis component is a loading state\n\n## Usage\n\nImport Spinner from this package.\n\n```JSX\nimport React from 'react';\nimport { Spinner } from '@red-hat-insights/insights-frontend-components';\n\nclass YourCmp extends React.Component {\n  render() {\n    return (\n        <Spinner/>\n        <Spinner centered/>\n    )\n  }\n}\n```\n\n## Props\n\n```javascript\n{\n    className: propTypes.string,\n    centered: propTypes.bool\n};\n```\n"},842:function(e,n){e.exports="# Table Toolbar\n\nImplementation of 'table toolbar' that can contain table actions\n\n## Usage\n\nImport TableToolbar and styles from this package.\n\n```JSX\nimport React from 'react';\nimport { TableToolbar } from '@redhat-insights/insights-frontent-components/';\n\nclass YourCmp extends React.Component {\n  render() {\n    return (\n        <TableToolbar>\n            // Whatever content you want inside the toolbar (search, buttons, etc)\n        </TableToolbar>\n        <Table>\n            // Table content\n        </Table>\n    )\n  }\n}\n```\n\n### Add results to the toolbar\n\n```JSX\nimport React from 'react';\nimport { TableToolbar } from '@redhat-insights/insights-frontent-components/';\n\nclass YourCmp extends React.Component {\n  render() {\n    return (\n        <TableToolbar results={ number of results }>\n            // Whatever content you want inside the toolbar (search, buttons, etc)\n        </TableToolbar>\n        <Table>\n            // Table content\n        </Table>\n    )\n  }\n}\n```\n\n## Props\n\nTableToolbar\n\n```javascript\n{\n    results: propTypes.number,\n    className: propTypes.string,\n    children: propTypes.any\n};\n```"},843:function(e,n){e.exports="# Wizard\n\nImplementation of wizard component, which is a collection of modals with steps.\n\n## Usage\n\nImport Wizard from this package.\n\n```JSX\nimport React from 'react';\n\n// Import Components\nimport { Button } from '@patternfly/react-core';\nimport { Wizard } from '@redhat-insights/insights-frontent-components/';\n\n// Import your steps for the wizard\n// These are just components that will render in the modal body section\nimport Step1 from './Step1';\nimport Foo from './Foo';\nimport Bar from './Bar';\n\nclass YourCmp extends React.Component {\n\n    // Set the default state of the modal\n    constructor () {\n        super();\n        this.state = {\n            isModalOpen: false\n        };\n        this.onClose = this.onClose.bind(this);\n        this.openWizard = this.openWizard.bind(this);\n    };\n\n    // Handle the open/close\n    onClose(submitted) {\n        this.setState({\n            isModalOpen: false\n        });\n\n        if (submitted) {\n            // on-submit action goes here...\n        }\n    };\n\n    openWizard() {\n        this.setState({\n            isModalOpen: true\n        });\n    }\n\n    render() {\n\n        const { isModalOpen } = this.state;\n\n        // Wizard Content\n        const ModalStepContent = [\n            <Step1 key='step1'/>,\n            <Foo key='Foo'/>\n            <Bar key='Bar'/>\n        ];\n\n        return (\n            <React.Fragment>\n                // Button to open the wizard\n                <Button variant='primary' onClick={ this.openWizard }> Open Wizard </Button>\n                <Wizard\n                    isLarge\n                    title=\"Example Wizard\"\n                    className='ins-c-wizard-example'\n                    onClose = { this.onClose }\n                    isOpen= { isModalOpen }\n                    content = { ModalStepContent }\n                />\n            </React.Fragment>\n        );\n    }\n}\n```\n\n## Props\n\nWizard\n\n```javascript\n{\n    isLarge: PropTypes.bool,\n    title: PropTypes.string,\n    className: PropTypes.string,\n    isOpen: PropTypes.any,\n    onClose: PropTypes.func,\n    content: PropTypes.array\n};\n```"},844:function(e,n,t){"use strict";var o=t(11),a=t.n(o),i=t(12),r=t.n(i),s=t(20),l=t.n(s),c=t(21),p=t.n(c),d=t(22),h=t.n(d),u=t(34),m=t.n(u),b=t(25),g=t.n(b),f=t(2),y=t.n(f),v=t(340),w=t(341),k=t(643),S=function(e){function n(){var e;return a()(this,n),e=l()(this,p()(n).call(this)),g()(m()(m()(e)),"handleTextInputChange",function(n){e.setState({value:n})}),e.state={value:""},e.handleTextInputChange=e.handleTextInputChange.bind(m()(m()(e))),e}return h()(n,e),r()(n,[{key:"componentWillUnmount",value:function(){console.log("[WIZARD] Input value: ".concat(this.state.value))}},{key:"render",value:function(){var e=this.state.value;return y.a.createElement(y.a.Fragment,null,y.a.createElement("h2",null," This is the first step. Each step can be inline or imported."),y.a.createElement(v.a,{className:"example-wizard example-wizard__step-1"},y.a.createElement(w.a,{label:"Example Name Input",isRequired:!0,fieldId:"example-name"},y.a.createElement(k.a,{isRequired:!0,type:"text",value:e,onChange:this.handleTextInputChange,placeholder:"Example Placeholder","aria-label":"Name your example"}))))}}]),n}(f.Component);S.displayName="Step1",n.a=S,S.__docgenInfo={description:"",methods:[{name:"handleTextInputChange",docblock:null,modifiers:[],params:[{name:"value",type:null}],returns:null}],displayName:"Step1"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Components/Wizard/Step1.js"]={name:"Step1",docgenInfo:S.__docgenInfo,path:"src/Components/Wizard/Step1.js"})},845:function(e,n,t){"use strict";var o=t(11),a=t.n(o),i=t(12),r=t.n(i),s=t(20),l=t.n(s),c=t(21),p=t.n(c),d=t(22),h=t.n(d),u=t(2),m=t.n(u),b=function(e){function n(){return a()(this,n),l()(this,p()(n).apply(this,arguments))}return h()(n,e),r()(n,[{key:"render",value:function(){return m.a.createElement("span",{className:"sizedWizard"},m.a.createElement("h2",null," This is where you will notice the difference between a large and small modal "),m.a.createElement("p",null,' Try toggling the "Large" checkbox in the Knobs Section '),m.a.createElement("p",null," Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."))}}]),n}(u.Component);b.displayName="Step2",n.a=b,b.__docgenInfo={description:"",methods:[],displayName:"Step2"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Components/Wizard/Step2.js"]={name:"Step2",docgenInfo:b.__docgenInfo,path:"src/Components/Wizard/Step2.js"})},846:function(e,n,t){"use strict";var o=t(11),a=t.n(o),i=t(12),r=t.n(i),s=t(20),l=t.n(s),c=t(21),p=t.n(c),d=t(22),h=t.n(d),u=t(34),m=t.n(u),b=t(2),g=t.n(b),f=t(340),y=t(341),v=t(649),w=t(644),k=t(646),S=(t(1195),function(e){function n(){var e;return a()(this,n),(e=l()(this,p()(n).call(this))).state={value:"Select One"},e.onChangeexampleOptions=e.onChangeexampleOptions.bind(m()(m()(e))),e.exampleOptions=[{value:"Select One",label:"Select One",disabled:!0},{value:"Value 1",label:"Value 1",disabled:!1},{value:"Value 2",label:"Value 2",disabled:!1},{value:"Value 3 - Disabled",label:"Value 3 - Disabled",disabled:!0}],e}return h()(n,e),r()(n,[{key:"onChangeexampleOptions",value:function(e){this.setState({value:e})}},{key:"componentWillUnmount",value:function(){console.log("[WIZARD] Select value: ".concat(this.state.value))}},{key:"render",value:function(){return g.a.createElement(g.a.Fragment,null,g.a.createElement("h2",null," Select values for Example "),g.a.createElement(f.a,{className:"example-wizard example-wizard__step-2"},g.a.createElement(y.a,{isRequired:!0,fieldId:"select-example"},g.a.createElement(v.a,{id:"one-example",name:"select-example",label:"Example Select","aria-label":"Example Select"}),g.a.createElement(w.a,{value:this.state.value,onChange:this.onChangeexampleOptions,"aria-label":"Select Input"},this.exampleOptions.map(function(e,n){return g.a.createElement(k.a,{isDisabled:e.disabled,key:n,value:e.value,label:e.label})})))))}}]),n}(b.Component));S.displayName="Step3",n.a=S,S.__docgenInfo={description:"",methods:[{name:"onChangeexampleOptions",docblock:null,modifiers:[],params:[{name:"value",type:null}],returns:null}],displayName:"Step3"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Components/Wizard/Step3.js"]={name:"Step3",docgenInfo:S.__docgenInfo,path:"src/Components/Wizard/Step3.js"})},847:function(e,n,t){"use strict";var o=t(11),a=t.n(o),i=t(12),r=t.n(i),s=t(20),l=t.n(s),c=t(21),p=t.n(c),d=t(22),h=t.n(d),u=t(2),m=t.n(u),b=function(e){function n(){return a()(this,n),l()(this,p()(n).apply(this,arguments))}return h()(n,e),r()(n,[{key:"render",value:function(){return m.a.createElement(m.a.Fragment,null,m.a.createElement("h2",null," This is the last step "),m.a.createElement("p",null," Notice how the 'continue' button changes to 'confirm' "))}}]),n}(u.Component);b.displayName="Step4",n.a=b,b.__docgenInfo={description:"",methods:[],displayName:"Step4"},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Components/Wizard/Step4.js"]={name:"Step4",docgenInfo:b.__docgenInfo,path:"src/Components/Wizard/Step4.js"})},848:function(e,n){e.exports="# Redux\n\nWe provide some improvements over redux so projects using this package can use redux to it's full.\n\n## Middleware listener\n\nBecause there are places where creating new reducer is too robust and might lead to wrong state mutation there is middleware which can create listeners on redux actions. Anytime new action is triggered it looks trough this set of listeners and calls callbacks.\n\n### Usage of middleware listener\n\n```javascript\nimport { applyMiddleware } from 'redux';\nimport { MiddlewareListener } from '@red-hat-insights/insights-frontend-components';\nconst listenerMiddleware = new MiddlewareListener();\nthis.store = createStore(\n    reducers,\n    initState,\n    applyMiddleware(listenerMiddleware.getMiddleware())\n);\n```\n\nAfter creating such listener middleware you can simply call `addNew` method with type over which you want to listen and callback that is called when such action is called on redux.\n\naddNew params:\n\n- on - type of action to listen to\n- callback - function that is called when action is triggered\n\nCallback params:\n\n- data - payload from action\n- preventBubble - function to prevent bubbling of such redux event. New event is triggered with type `@@config/action-stopped` and payload as action that was stopped.\n\n```javascript\nconst removeListener = listenerMiddleware.addNew({on: 'someType', (event) => event.preventBubble()})\n```\n\nPlease clean after yourself by calling function which is returned from `listenerMiddleware`.\n\n## Reducer registry\n\nTo enable registering reducers on the fly you may use reducer registry. There are also helper functions to help you improve your work with redux.\n\n### Registry decorator\n\nTo use registry out of the box without some kind of coding we provide simple decorator\n(you'd have to install coresponding babel [plugin](http://babeljs.io/docs/en/babel-plugin-transform-decorators) and enable decorators).\n\n- First you have to initialize such registry by calling `getStoreFromRegistry` with initial state and some middlewares. Note: (both attributes are optional).\n\n```JSX\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { getStoreFromRegistry } from '@red-hat-insights/insights-frontend-components';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={getStoreFromRegistry({}, [promiseMiddleware()])}>\n        <Router basename='/insights/platform/inventory'>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n\n```\n\n- Then you can use this decorator anywhere you want and you can access registry by calling `this.registry`.\n\n ```JSX\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { registry as registryDecorator } from '@red-hat-insights/insights-frontend-components';\n\n//We'll bind registry to this class\n@registryDecorator()\nclass SomeClass extends Component {\n\n    componentDidMount () {\n        //we'll register new reducer over here\n        this.registry.register({\n            someKey: (state, action) => ({...state})\n        })\n    }\n\n    render () {\n        return (\n        <div>\n            Hello world\n        </div>\n        );\n    }\n}\n\nexport default connect()(App);\n```\n\n#### Usage of reducer registry\n\nSimply create new instance of reducer registry, you may wish to supply some parameters while creating new store so you\ncan change behaviour of your state.\n\nParameters:\n\n- `initState` - default to empty object\n- `middlewares` - default to empty array\n- `composeEnhancers` - default to `compose` from redux library\n\n```javascript\nimport { ReducerRegistry } from '@red-hat-insights/insights-frontend-components';\nimport { middlewares } from './middlewareSettings';\n\nconst reduxRegistry = new ReducerRegistry(initState, middlewares);\n```\n\nAvailable methods:\n\n- `getStore` - to dispatch or to read state of store\n- `register` - to add multiple reducers\n\n### Helper function\n\n#### `applyReducerHash`\n\nIf you don't like switch statements in your reducers you may use object literals, this function will map such object to\nreducer\n\n```javascript\nconst SOME_ACTION = 'some-action';\nfunction reducerFunction(state, action) {\n    return {\n        ...state,\n        someProps: action.payload\n    };\n}\n\nconst customReducer = applyReducerHash({\n    [SOME_ACTION]: reducerFunction\n})\n```\n\nLater you can assign this `customReducer` to change the store by calling `register` function.\n\n#### `dispatchActionsToStore`\n\nIf application has some actions which needs to be dispatched over multiple stores or they can't be connected via `redux-redux` it's convenient to use this function.\n\nIt's as easy as calling dispatchActionsToStore with multiple actions (either trough object or array) and store over which you want to dispatch these functions.\n\n```javascript\n\nimport * as actions from './actions';\nimport store from './singleton-store';\nimport { dispatchActionsToStore } from '@red-hat-insights/insights-frontend-components';\n\nexport default dispatchActionsToStore(actions, store);\n```"},849:function(e,n){e.exports="# Insights Chrome\n\nThe \"wrapper\" around your application!\n\nInsights Chrome provides:\n    - Standard header and navigation\n    - Base CSS/style\n    - A JavaScript library for interacting with Insights Chrome\n\n## Usage\n\nYou can include/use chrome in your development project by running the [insights-proxy](https://github.com/RedHatInsights/insights-proxy) in front of your application and using the following HTML template.\n\n```html\n<!DOCTYPE html>\n<html lang=\"en-US\">\n\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>App Name</title>\n    <esi:include src=\"@@env/chrome/snippets/head.html\" />\n  </head>\n  <body>\n    <esi:include src=\"@@env/chrome/snippets/landing.html\" />\n  </body>\n\n</html>\n```\n\nThen, render your application to the \"root\" element. With React, for instance:\n\n```js\nfunction getBaseName(pathname) {\n    let release = '/';\n    const pathName = pathname.split('/');\n\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n\n    return `${release}${pathName[0]}/${pathName[1]}`;\n}\n\nReactDOM.render(\n    <Provider store={ init().getStore() }>\n        <Router basename={ getBaseName(window.location.pathname) }>\n            <App />\n        </Router>\n    </Provider>,\n\n    document.getElementById('root')\n);\n\n```\n\n## Javascript API\n\nInsights Chrome comes with a Javacript API that allows applications to control navigation, global filters, etc.\n\n```js\n    // initialize chrome\n    insights.chrome.init();\n\n    // identify yourself (the application). This tells Chrome which global navigation element should be active\n    insights.chrome.identifyApp('advisor');\n\n    // define application navigation (navigation submenu)\n    // at most one of the elements should be declared active\n    // the operation is idempotent\n    insights.chrome.navigation([{\n        id: 'stability',\n        title: 'Stability'\n    }, {\n        id: 'performance',\n        title: 'Performance',\n        active: true\n    }]);\n\n    // register a listener for application navigation events\n    const unregister = insights.chrome.on('APP_NAVIGATION', event => {\n        // change application route in response to navigation event from Chrome\n        history.push(`/${event.navId}`);\n    });\n\n    // the listener can be unregistered if needed\n    unregister();\n```\n\nThe following events can be observed:\n    * `APP_NAVIGATION` - fired when the application navigation option is selected. `event.navId` can be used to access the id of the navigation option\n\nTo activate certain app within your app (your app is using some kind of router and you want to activate certain part of navigation programatically) you can call function `insights.chrome.appNavClick({id: 'some-id'})` for first level nav and for second level navs you have to call `insights.chrome.appNavClick({id: 'ocp-on-aws', secondaryNav: true})`\n\n## Running the build\n\nThere is numerous of task for building this application. You can run individual tasks or run them in batch to build the\nentire app or to watch files.\n\n### Individual tasks\n\nTo run each task you have to first install dependencies `npm install` and then you are free to use any task as you wish.\nIf you want to watch file changes for each build just pass `-- -w` to specific task (this is not applicable to\n`npm run build:js:watch` because it's somewhat specific).\n\n1. Building of styles\n\n    ```bash\n    > npm run build:sass\n    ```\n\n2. Building of javascripts\n\n    ```bash\n    > npm run build:js\n    ```\n\n3. Building of javascripts and watching files when they change\n\n    ```bash\n    > npm run watch:js\n    ```\n\n4. Building of HTML partials\n\n    ```bash\n    > npm run build:pug\n    ```\n\n5. Running tests\n\n    ```bash\n    > npm run test\n    ```\n\n#### Specific tasks\n\n1. Run build of whole application just once\n\n    ```bash\n    > npm run build\n    ``1\n\n2. Watching file changes and trigger build every time something changes\n\n```bash\n> npm run start\n```"},850:function(e,n){e.exports='# insights-proxy\n\nProxy for the insightsfrontend container\n\nThis container uses [spandx](https://github.com/redhataccess/spandx) which provides ESI and some nifty routing tools.\n\nCheckout the `spandx` docs for additional config options.\n\n## Setup\n\n### Setup the initial /etc/hosts entries (do this once)\n\n```bash\nsudo bash scripts/patch-etc-hosts.sh\n```\n\n### Pull/Update the proxy container\n\n```bash\nbash scripts/update.sh\n```\n\n## Running the proxy (for users)\n\n### Run the container with default options\n\n```bash\nbash scripts/run.sh\n```\n\n## Options for run.sh\n\n### Run the container with spandx config overrides\n\n```bash\nSPANDX_CONFIG=/path/to/custom/config.js bash ~/path/to/insights-proxy/scripts/run.sh\n```\n\n### Run with local Insights Chrome (for chrome developers only)\n\nThis is for Chrome developers only.\nIf you are developing an application on the platform you need not do this!\n\n```bash\ncd ~/path/to/chrome/directory\nLOCAL_CHROME=true bash ~/path/to/insights-proxy/scripts/run.sh\n```\n\n## Additional Notes\n\n### Virtualbox users (just dont Vbox though...)\n\nNote to macOS and Windows users using [Docker Machine](https://docs.docker.com/machine/): You have to set-up forwarding of the port 1337 through the VirtualBox network interface. The machine has to be stopped for this command to succeed.\n\n```bash\nVBoxManage modifyvm "default" --natpf1 "insights,tcp,,1337,,1337"\n```\n\n### Docker Version\n\nThe insights-proxy container utilizes several rewrite rules; including one for `host.docker.internal` which will resolve to the internal IP address used by the host. This special DNS name is stable from version *18.03* for Linux & macOS, however for previous versions the DNS name varied for macOS, see [Stack Overflow](https://stackoverflow.com/questions/31324981/how-to-access-host-port-from-docker-container/43541732#43541732).\n\nIf you are using a version of Docker older than *18.03* on macOS, you will need to either upgrade your Docker version or update you spandx.config.js to map to the appropriate DNS name for your version.\n'},851:function(e,n){e.exports="# Insights Frontend Starter App\n\n[![Build Status](https://travis-ci.org/RedHatInsights/insights-frontend-starter-app.svg?branch=master)](https://travis-ci.org/RedHatInsights/insights-frontend-starter-app)\n\n[Github](https://github.com/RedHatInsights/insights-frontend-starter-app)\n\nReact.js starter app for Red Hat Insights products that includes Patternfly 3 and Patternfly Next.\n\n## Getting Started\n\n- Insights Frontend Starter App\n\n- [Insights Chroming](https://github.com/RedHatInsights/insights-chrome)\n- [Insights Proxy](https://github.com/RedHatInsights/insights-proxy)\n\nNote: You will need to set up the Insights environment if you want to develop with the starter app due to the consumption of the chroming service as well as setting up your global/app navigation through the API.\n\n## Build app\n\n1. ```npm install```\n\n2. ```SPANDX_CONFIG=./config/spandx.config.js && npm run start```\n    - starts webpack bundler and serves the files with webpack dev server\n\n### Testing\n\n- Travis is used to test the build for this code.\n  - `npm run test` will run linters and tests\n\n## Deploying\n\n- The Platform team is using Travis to deploy the application\n  - The Platform team will help you set up the Travis instance if this is the route you are wanting to take\n\n### How it works\n\n- any push to the `{REPO}` `master` branch will deploy to a `{REPO}-build` `master` branch\n- any push to a `{REPO}` `stable/*` branch will deploy to a `{REPO}-build` `stable` branch\n- Pull requests (based on master) will not be pushed to `{REPO}-build` `master` branch\n  - If the PR is accepted and merged, master will be rebuilt and will deploy to `{REPO}-build` `master` branch\n\n## Patternfly\n\n- This project imports Patternfly components:\n  - [Patternfly React](https://github.com/patternfly/patternfly-react)\n\n## Insights Components\n\nInsights Platform will deliver components and static assets through [npm](https://www.npmjs.com/package/@red-hat-insights/insights-frontend-components). ESI tags are used to import the [chroming](https://github.com/RedHatInsights/insights-chrome) which takes care of the header, sidebar, and footer.\n\n## Technologies\n\n### Webpack\n\n#### Webpack.config.js\n\nThis file exports an object with the configuration for webpack and webpack dev server.\n\n```Javascript\n{\n    mode: https://webpack.js.org/concepts/mode/,\n    devtool: https://webpack.js.org/configuration/devtool/,\n\n    // different bundle options.\n    // allows you to completely separate vendor code from app code and much more.\n    // https://webpack.js.org/plugins/split-chunks-plugin/\n    optimization: {\n        chunks: https://webpack.js.org/plugins/split-chunks-plugin/#optimization-splitchunks-chunks-all,\n        runtimeChunk: https://webpack.js.org/plugins/split-chunks-plugin/#optimization-runtimechunk,\n\n        // https://webpack.js.org/plugins/split-chunks-plugin/#configuring-cache-groups\n        cacheGroups: {\n\n            // bundles all vendor code needed to run the entry file\n            common_initial: {\n                test: // file regex: /[\\\\/]node_modules[\\\\/]/,\n                name: // filename: 'common.initial',\n                chunks: // chunk type initial, async, all\n            }\n        }\n    },\n\n    // each property of entry maps to the name of an entry file\n    // https://webpack.js.org/concepts/entry-points/\n    entry: {\n\n        // example bunde names\n        bundle1: 'src/entry1.js',\n        bundle2: 'src/entry2.js'\n    },\n\n    // bundle output options.\n    output: {\n            filename: https://webpack.js.org/configuration/output/#output-filename,\n            path: https://webpack.js.org/configuration/output/#output-path,\n            publicPath: https://webpack.js.org/configuration/output/#output-publicpath,\n            chunkFilename: https://webpack.js.org/configuration/output/#output-chunkfilename\n    },\n     module: {\n         rules: https://webpack.js.org/configuration/module/#module-rules\n     },\n\n     // An array of webpack plugins look at webpack.plugins.js\n     // https://webpack.js.org/plugins/\n     plugins: [],\n\n     // webpack dev serve options\n     // https://github.com/webpack/webpack-dev-server\n     devServer: {}\n}\n```\n\n#### Actions\n\n[Actions](https://redux.js.org/basics/actions) are payloads of information that send data from your application to your store. They are the only source of information for the store. You send them to the store using [store.dispatch()](https://redux.js.org/api-reference/store#dispatch).\nRedux actions should only have two properties, type and payload, as a best practice.\n\n- Async Actions frameworks\n\n  - [redux-promise-middleware](https://github.com/pburtchaell/redux-promise-middleware)\n    - Currently using this\n      - look at [/src/api/System/getSystems.js](https://github.com/RedHatInsights/turbo-octo-couscous/tree/master/src/api/System/getSystems.js)\n  - [redux-thunk](https://github.com/gaearon/redux-thunk)\n    - A function that wraps an expression to delay its evaluation\n\n    ```Javascript\n    // gotSystems(Error) are action creators\n    function getSystems() {\n          return function (dispatch) {\n            return fetchSystems().then(\n              systems => dispatch(gotSystems(systems)),\n              error => dispatch(gotSystemsError(error))\n            );\n          };\n        }\n    ```\n\n  - [redux-saga](https://github.com/yelouafi/redux-saga/)\n    - Uses [generator functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*)\n    - Could be a lot to learn initially.\n  - [redux-pack](https://github.com/lelandrichardson/redux-pack)\n\n#### Reducers\n\n[Reducers](https://redux.js.org/basics/reducers) specify how the application's state changes in response to actions sent to the store.\n\nEx) [/src/api/System/getSystems.js](https://github.com/RedHatInsights/turbo-octo-couscous/tree/master/src/api/System/getSystems.js)\n\n### React-redux\n\n- [Provider](https://github.com/reactjs/react-redux/blob/master/docs/api.md#provider-store)\n  - Makes the Redux store available to the connect()\n- [connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])](https://github.com/reactjs/react-redux/blob/master/docs/api.md#connectmapstatetoprops-mapdispatchtoprops-mergeprops-options)\n  - Connects a React component to a Redux store\n\n### React-router-dom\n\nWhen setting up the routes, the page content is wrapped with a `.page__{pageName}` class, applied to the `#root` ID that is determined by the `rootClass` in the `Routes.js` which lets you easily reference the page in the styling.\n\n- [BrowserRouter](https://reacttraining.com/react-router/web/api/BrowserRouter)\n  - A `<Router>` that uses the HTML5 history API (pushState, replaceState and the popstate event) to keep your UI in sync with the URL\n- [Route](https://reacttraining.com/react-router/web/api/Route)\n- [Switch](https://reacttraining.com/react-router/web/api/Switch)\n  - Renders the first child `<Route>` or `<Redirect>` that matches the location.\n- [Redirect](https://reacttraining.com/react-router/web/api/Redirect)\n  - navigate to a new location\n- [withRouter](https://reacttraining.com/react-router/web/api/withRouter)\n  - passes updated match, location, and history props to the wrapped component whenever it renders"},852:function(e,n){e.exports="# Insights Deployments Test\n\nMaster: [![Master](https://img.shields.io/travis/RedHatInsights/insights-deployment-test.svg)](https://travis-ci.org/RedHatInsights/insights-deployment-test)\n\nStable: ![GitHub last commit (branch)](https://img.shields.io/github/last-commit/RedHatInsights/insights-deployment-test-build/stable.svg)\n\n[Github](https://github.com/RedHatInsights/insights-deployments-test)\n\nTesting repo for travis deployments\n\nThe deployment process for the applications on the Insights Platform uses an Akamai NetStorage instance to store all of the files that are used to render the pages. To get the files there we use a travis-ci script to push the build files to a build Github repo whenever master or a stable branch is pushed. Jenkins watches the build repo and kicks off a job that will then sync the build files with our NetStorage.\n\n## Build\n\nShould build to the [build repo](https://github.com/RedHatInsights/insights-deployment-test-build)\n\n### Prerequisites\n\n1. Travis CLI: `gem install travis` or `brew install travis`\n\n2. Travis-CI should be enabled for your dev repo\n\n### Steps\n\n1. Copy the [travis.yml](https://github.com/RedHatInsights/insights-deployment-test/blob/master/.travis.yml) file and [.travis directory](https://github.com/RedHatInsights/insights-deployment-test/tree/master/.travis) and place in the root of your project\n2. Create a build repo on Github. Usually this will be named `[dev-repo-name]-build`\n3. Generate a private key for pushing from dev repo to build repo\n    * `ssh-keygen -t rsa -b 4096 -C`\n    * Save the key without a passphrase\n4. Copy the public key to the build repo under Settings -> Deploy Keys and check the box for allowing write access.\n5. Encrypt the deploy key with Travis CLI\n    * Login to Travis CLI\n    * Make sure you have Travis CI CLI tools and can login to [Travis CLI](https://github.com/travis-ci/travis.rb#installation)\n    * Verify that you are inside of your development repo and then encrypt the key with Travis CLI\n6. You should now have a deploy_key.enc file. Delete deploy_key and deploy_key.pub.\n7. Replace the deploy_key decryption statement in .travis.yml with your newly generated one from the encryption step 5.b but replace ~\\/.ssh/deploy_key with just deploy_key\n8. Commit your deploy_key.enc file, .travis.yml, and .travis directory\n9. Verify that the Travis env variables have been added.\n10. Confirm the build completed successfully on Travis-CI and verify that the files were pushed to your build repo.\n\n## How to Use\n\n### Pushing to beta/master\n\nAnytime a build of the master branch happens, Travis builds and pushes a new commit to the master branch in your build repo. Pull requests on master will not be deployed until they are merged, but they will be built to assure linting, snapshots, etc. are working as expected.\n\n### Pushing to stable\n\nIf you want to push to stable, make a branch `stable/foo`, `stable/bar`, etc. Any build of a stable branch in the repo will deploy to `stable` branch in the build repo."},853:function(e,n){e.exports="# A running list of all of the apps by navigation groups\n\n## Landing\n\n* [Frontend](https://github.com/RedHatInsights/landing-page-frontend)\n\n## Red Hat Insights\n\n-----\n\n### Insights (Formerly Advisor/Configuration Assessment)\n\n* [Frontend](https://github.com/RedHatInsights/insights-advisor-frontend)\n\n### Inventory\n\n* [Frontend](https://github.com/RedHatInsights/insights-inventory-frontend)\n\n## Remediations\n\n* [Frontend](https://github.com/RedHatInsights/insights-remediations-frontend)\n\n### Insights Settings\n\n#### Hooks\n\n* [Frontend](https://github.com/RedHatInsights/notifications-frontend)\n\n#### Sources\n\n* [Frontend](https://github.com/ManageIQ/sources-ui)\n\n-----\n\n## Cloud Management Services\n\n### Dashboard\n\n* [Frontend](https://github.com/RedHatInsights/insights-dashboard)\n\n### Vulnerability\n\n* [Frontend](https://github.com/RedHatInsights/vulnerability-ui)\n\n### Compliance\n\n* [Frontend](https://github.com/RedHatInsights/compliance-frontend)\n\n### Drift\n\n* [Frontend](https://github.com/RedHatInsights/drift-frontend)\n\n### Inventory\n\n* [Frontend](https://github.com/RedHatInsights/insights-inventory-frontend)\n\n## Remediations\n\n* [Frontend](https://github.com/RedHatInsights/insights-remediations-frontend)\n\n-----\n\n## Hybrid Cloud Management Services\n\n### Catalog\n\n## Cost Management / Project Koku\n\n* [Frontend](https://github.com/project-koku/koku-ui)\n* [Documentation](https://koku.readthedocs.io/en/latest/)\n\n### HCM Settings\n\n#### Sources\n\n* [Frontend](https://github.com/ManageIQ/sources-ui)\n\n#### RBAC\n\n* [Frontend](https://github.com/RedHatInsights/insights-rbac-ui)\n"},854:function(e,n){e.exports="# Red Hat Insights Storybook\n\nThe Insights Storybook is a place for Insights documentaiton regarding front end development through the chroming, components, and any applications.\n\n## [Storybook](https://github.com/storybooks/storybook)\n\nStorybook is a development environment for UI components. It allows you to browse a component library, view the different states of each component, and interactively develop and test components.\n\n### Addons\n\nAddons are essentially plugins for Storybook that allow a deeper configuration\n\n#### [ReadMe](https://github.com/tuchk4/storybook-readme)\n\nStorybook Community Addon Readme gives the ability to import markdown docs in the main story and in the Addon Panel\n\n#### [Knobs](https://github.com/storybooks/storybook/tree/release/3.4/addons/knobs)\n\nStorybook Addon Knobs allow you to edit React props dynamically using the Storybook UI. You can also use Knobs as a dynamic variable inside stories in Storybook.\n\n#### [Chapters](https://github.com/Checkfront/react-storybook-addon-chapters)\n\nReact Storybook Chapters addon allows showcasing of multiple components within a story by breaking it down into smaller categories (chapters) and subcategories (sections) for more organizational goodness.\n\n#### [Actions](https://github.com/storybooks/storybook/tree/release/3.4/addons/actions)\n\nStorybook Addon Actions can be used to display data received by event handlers in Storybook.\n\n### Navigating Storybook & Terms\n\nThere is a search box at the top left hand corner which will allow you to search doc names\n\n#### Stories\n\nStories are published in the main board. This is where all components will be rendered along with any other necessary text\n\n#### Addon Panel\n\nThe addon panel is where you will find additional Readme files, knobs to edit React props in real time, and an Action Logger to display data.\n\n##### All components should have an associated Readme file\n\n## Contributing Documentation\n\n[Repo Link](https://github.com/RedHatInsights/insights-frontend-storybook)\n\n### Development\n\n`git clone git@github.com:RedHatInsights/insights-frontend-storybook.git`\n\n`npm install`\n\n`npm run start` to launch a browser and view the storybook, watches files\n\n#### Building\n\n`npm run build` to build the storybook, used for testing"},855:function(e,n){e.exports="# This is the Addon Panel which supports markdown files, knobs, and action loggers\n\nKeyboard Shortcuts\n\n⌘ ⇧ O/  ⌃ ⇧ O `Show Search Box`\n\n⌘ ⇧ G/  ⌃ ⇧ G `Toggle Addon panel position`\n\n⌘ ⇧ F/  ⌃ ⇧ F `Toggle Fullscreen Mode`\n\n⌘ ⇧ X/  ⌃ ⇧ X `Toggle Stories Panel`\n\n⌘ ⇧ C/  ⌃ ⇧ C `Toggle Addon panel`\n\n⌘ ⇧ →/  ⌃ ⇧ → `Next Story`\n\n⌘ ⇧ ←/  ⌃ ⇧ ← `Previous Story`"},856:function(e,n){e.exports='# Creating a Red Hat Insights Application\n\n## Setup for development\n\n### Docker\n\nThis project uses [Docker](https://www.docker.com/get-docker) for development. You will need to [download](https://www.docker.com/get-docker) it in order to run the proxy container.\n\n* You can curl a script to bypass the downloading. You will still have to run each application yourself as noted in the "Running and Developing" section below *\n\n``` bash\nsh <(curl https://gist.githubusercontent.com/ryelo/efdf27b0b5a6d9c70f8e63b0abc1deaa/raw/f21dbc04443a61cf21d28a3d47467b4e072321bc/red-hat-insights-env.sh)\n```\n\n### Proxy\n\nContainer that provides ESI and routing tools\n\n1. Clone the Proxy\n\n    ```sh\n    git@github.com:RedHatInsights/insights-proxy.git\n    ```\n\n2. Install dependencies\n\n    ```sh\n    npm install\n    ```\n\n3. Setup the initial /etc/hosts entries (do this once)\n\n    ```sh\n    sudo bash scripts/patch-etc-hosts.sh\n    ```\n\n4. Pull/Update the proxy container\n\n    ```sh\n    bash scripts/update.sh\n    ```\n\n### Chrome\n\nWraps your application and provides header, footer, navigation, styles, and a js library to interact with chrome directly.\n\n1. Clone Chrome\n\n    ```sh\n    git@github.com:RedHatInsights/insights-chrome.git\n    ```\n\n2. Install dependencies\n\n    ```sh\n    npm install\n    ```\n\n3. Run the build\n\n    ```sh\n    npm run build\n    ```\n\n### Starter App\n\nBootstrapped application with essential tools for rapid development\n\n1. Clone the Starter App\n\n    ```sh\n    git@github.com:RedHatInsights/insights-frontend-starter-app.git\n    ```\n\n2. Install dependencies\n\n    ```sh\n    npm install\n    ```\n\n## Running and Developing\n\n**If you used the download script, pick back up here.**\n\n### Proxy\n\n#### Default Configuration\n\n1. Run the container with default options\n\n    ```sh\n    bash scripts/run.sh\n    ```\n\n#### More options for running\n\n* Run with the local Legacy Insighs API\n\n    ```sh\n    LOCAL_API=true bash scripts/run.sh\n    ```\n\n### Chrome\n\n1. Build Chrome and watch it for changes\n\n    ```sh\n    npm run build\n    ```\n\n### Starter App\n\n1. Build\n\n    ```sh\n    SPANDX_CONFIG=./config/spandx.config.js && npm run start\n    ```\n\n2. Navigate to `https://prod.foo.redhat.com:1337/insights/samplepage`'},857:function(e,n){e.exports="# Donut Chart\n\nThis component is usefull to display x number of values to compare them to an overall value\n\n```jsx\nimport React from 'react'\nimport { Donut } from '@red-hat-isnights/insights-frontend-components';\n\nlet DonutValues = [\n    ['value1', 5],\n    ['value2', 10],\n    ['value3', 20],\n    ['value4', 40]\n];\n\n<Donut values={DonutValues} totalLabel='label for donut-hole' identifier='donut-identifier'/>;\n\n```\n\n## Donut with Legend\n\n```jsx\n\n<Donut values={DonutValues} totalLabel='label for donut-hole' identifier='donut-identifier' withLegend/>;\n\n```\n\n## Donut with Legend and Links\n\n```jsx\n\nconst typeLink = '/foo/';\n\n// The link prop will append the label (value1, value2, value3, value4) to the typeLink const\n// in this case, you'll get the link /actions/value1 etc.\n\n<Donut values={DonutValues} link={typeLink} totalLabel='label for donut-hole' identifier='donut-identifier' withLegend/>;\n\n```\n\n## Props\n\n```JS\n{\n    className: propTypes.string,\n    height: propTypes.number,\n    identifier: propTypes.string,\n    values: propTypes.array,\n    width: propTypes.number,\n    totalLabel: propTypes.string,\n    withLabel: propTypes.bool,\n}\n```"},858:function(e,n){e.exports="# Gauge Chart\n\nThis component is usefull to display x number of values to compare them to 100\n\n```jsx\nimport React from 'react'\nimport { Gauge } from '@red-hat-isnights/insights-frontend-components';\n\n<Gauge value={10} identifier='gauge-identifier' label='sample-gauge'/>\n\n```\n\n## Props\n\n```JS\n{\n    className: propTypes.string,\n    height: propTypes.number,\n    width: propTypes.number,\n    identifier: propTypes.string,\n    label: propTypes.string\n    value: propTypes.array,\n}\n```"},859:function(e,n){e.exports="# Matrix chart\n\nThis component is usefull to display 4 quadrants chart in which you can show circles with number of items per same hit.\nYou can change size of chart and it's axis scales (0 - 6 instead of 0 - 10 for instance).\n\n```jsx\nimport React from 'react'\nimport { Matrix } from '@red-hat-isnights/insights-frontend-components';\n\nexport default () => <Matrix data={\n  {\n    topRight: [{position: [1, 2], label: 'First'}],\n    topLeft: [{position: [0, 3], label: 'Second'}],\n    bottomRight: [{position: [4, 2], label: 'Third'}],\n    bottomLeft: [{position: [3, 4], label: 'Fourth'}]\n  }\n} />;\n```\n\n## Props\n\n```JS\n{\n  data: dataShape.isrequired,\n  config: configShape,\n  labels: labelsShape\n}\n```\n\n### Data shape\n\nThis prop is required and without it the component will not render.\n\n```JS\n{\n  topRight: arrayOf({position: arrayOf(number), label: string}),\n  topLeft: arrayOf({position: arrayOf(number), label: string}),\n  bottomRight: arrayOf({position: arrayOf(number), label: string}),\n  bottomLeft: arrayOf({position: arrayOf(number), label: string})\n}\n```\n\nSimplest example can look like\n\n```JS\n{\n  topRight: [{position: [1, 2], label: 'First'}],\n  topLeft: [{position: [0, 3], label: 'Second'}],\n  bottomRight: [{position: [4, 2], label: 'Third'}],\n  bottomLeft: [{position: [3, 4], label: 'Fourth'}]\n}\n```\n\n### Config shape\n\n```JS\n{\n  max: PropTypes.number,\n  min: PropTypes.number,\n  size: PropTypes.number,\n  gridSize: PropTypes.number,\n  pad: PropTypes.number,\n  shift: PropTypes.number,\n  colors: PropTypes.arrayOf(PropTypes.string)\n}\n```\n\n### Labels shape\n\n```JS\n{\n  yLabel: PropTypes.string,\n  xLabel: PropTypes.string,\n  subLabels: PropTypes.shape({\n    xLabels: PropTypes.arrayOf(PropTypes.string),\n    yLabels: PropTypes.arrayOf(PropTypes.string)\n  })\n}\n```"},860:function(e,n){e.exports="# Pie Chart\n\nThis component is usefull to display x number of values to compare them to an overall value in pie chart format\n\n```jsx\nimport React from 'react'\nimport { Pie } from '@red-hat-isnights/insights-frontend-components';\n\nlet PieValues = [\n    ['value1', 5],\n    ['value2', 10],\n    ['value3', 20],\n    ['value4', 40]\n];\n\n<Pie values={PieValues} identifier='pie-identifier'/>;\n\n```\n\n## Pie with Legend\n\n```jsx\n\n<Pie values={PieValues} identifier='pie-identifier' withLegend/>;\n\n```\n\n## Pie with Legend and Links\n\n```jsx\n\nconst typeLink = '/foo/';\n\n// The link prop will append the label (value1, value2, value3, value4) to the typeLink const\n// in this case, you'll get the link /actions/value1 etc.\n\n<Pie values={PieValues} link={typeLink} identifier='pie-identifier' withLegend/>;\n\n```\n\n## Props\n\n```JS\n{\n    className: propTypes.string,\n    height: propTypes.number,\n    identifier: propTypes.string,\n    values: propTypes.array,\n    width: propTypes.number,\n    withLabel: propTypes.bool,\n}\n```"},861:function(e,n){e.exports="# Insights Platform Deployments\n\nInsights front-end apps can be deployed very simply by pushing the build files of your React app to the environment branch of your choosing in your app’s build repo. For example, to deploy the stable version of your app to production, build your app so that the basepath is `/insights/platform/[app-name]/` and then push your files to the prod-stable branch on your build repo.\n\nIf you wish to deploy the beta version of your app to prod, build your app so that the basepath routes to `/insightsbeta/platform/[app-name]/` and push those files to prod-beta.\nStable versus Beta\nInsights Platform provides a beta and stable version in CI, QA, and Prod environments so that users can try out the latest features as soon as possible. When releasing to stable, the basepath of the app should point to `/insights/platform/[app-name]/` whereas when releasing to beta, the basepath should point to `/insights/platform/[app-name]/`. The insights-frontend-starter-app is setup to release this way for all of the available environments.\n\n## Starter App Updates\n\nIf you cloned/used the starter-app before the new build branches were created, [this commit](https://github.com/RedHatInsights/insights-frontend-starter-app/commit/9eb79919a334f7974cbcfdf0d8c5cac79f9791b6)\n updates the starter app to support the 6 different deployment branches in the build repo. You will also want to use [this commit](https://github.com/RedHatInsights/insights-frontend-starter-app/commit/ec39d89702e5d26eae146b3cf07577135ae921bb) for fixing beta deployments and [this commit](https://github.com/RedHatInsights/insights-frontend-starter-app/commit/daafec7f9d818ccf5722a6fb7b32ac3b4d3cf320) for adding dev commit messages to your build messages for easier debugging.\n\n## Build Branches and Deployment Environments\n\nThe app build repo has 6 different branches that each deploy to a different environment. For prod-stable and prod-beta, each time a push event occurs on a branch, a Jenkins job is triggered that will rsync all of the contents of that branch to its respective environment within seconds.\n\nFor the CI and QA environments each environment will pull from it’s respective branch every 60 seconds which means that if you push new files to a pre-prod branch, you can expect to see those files updated within a minute.\n\nBelow is a list of the branches on each app build repo and the environments that they point to.\n\n* prod-stable: https://access.redhat.com/insights/platform/\n* prod-beta: https://access.redhat.com/insightsbeta/platform/\n* qa-stable: https://access.qa.itop.redhat.com/insights/platform/\n* qa-beta: https://access.qa.itop.redhat.com/insightsbeta/platform/\n* ci-stable: https://access.ci.itop.redhat.com/insights/platform/\n* ci-beta: https://access.ci.itop.redhat.com/insightsbeta/platform/\n"},862:function(e,n){e.exports="# Insights Platform Auto Deployments to Stable and Beta\n\nThe deployment process for the applications on the Insights Platform uses an Akamai NetStorage instance to store all of the files that are used to render the pages for production and a similar setup for CI and QA. To get the files there we use a travis-ci script to push the build files to a build Github repo whenever master or a deployment branch is pushed. Jenkins watches the build repo and kicks off a job that will then sync the build files with our NetStorage or pre-prod environments.\n\n## Setting up with Travis-CI:\n\n### Prerequisite:\n\nYour project repo should be public\nTravis CLI: `gem install travis` or `brew install travis`\nTravis-CI should be enabled for your dev repo\n\n## Steps\n\n1. Copy the travis.yml file, the .travis directory, and the config directory from the Insights Frontend Starter App and place in the root of your project\n    * Make sure the files inside the .travis folder are executables (chmod +x foo.sh)\n\n2. _Insights Platform Team_ - Create a build repo on Github. Usually this will be named `[dev-repo-name]-build`\n    * Create release branches\n        * prod-stable\n            * Add Jenkinsfile\n        * prod-beta\n            * Add Jenkinsfile\n        * ci-stable\n        * ci-beta\n        * qa-stable\n        * qa-beta\n\n3. Change the REPO and REPO_DIR global variables in `.travis.yml` to equal the new build repo created\n\n4. **IMPORTANT**: verify that the dist/build folder name in .travis/release.sh match the build/dist folder in the repo. If not, travis will push the entire repo, including the encrypted private key (and possibly unencrypted private key) to the build repo.\n\n5. change the `publicPath` in `webpack.common.js` and `dev.webpack.config.js` to match your app name/path\n\n6. Assuming you are using the `src/index.html` from the `insights-frontend-starter-app`, update any path reference to insights to now by `@@insights` so that webpack can switch between beta and stable. See [insights-frontend-starter-app src/index.html](https://github.com/RedHatInsights/insights-frontend-starter-app/blob/master/src/index.html#L6) for an example.\n\n7. Generate a private key for pushing from dev repo to build repo\n    * `ssh-keygen -t rsa -b 4096`\n    * Save the key without a passphrase\n\n8. _Insights Platform Team_ - Copy the public key to the build repo under Settings -> Deploy Keys and check the box for allowing write access.\n\n9. Encrypt the deploy key with Travis CLI\n    * Login to Travis CLI\n        * Make sure you have Travis CI CLI tools and can [login to Travis CLI](https://github.com/travis-ci/travis.rb#installation)\n        * `travis login --org`\n\n    * Verify that you are inside of your development repo and then encrypt the key with Travis CLI\n        * `travis encrypt-file path/to/deploy_key --org`\n\n    * You should now have a `deploy_key.enc` file. Delete `deploy_key` and `deploy_key.pub`.\n\n10. Replace the `deploy_key` decryption statement in `.travis/after_success.sh` with your newly generated one from the encryption step 5.b but replace `~\\/.ssh/deploy_key` with just `deploy_key`\n\n11. Commit your `deploy_key.enc` file, `.travis.yml`, `config`, `src/index.html`, and `.travis` directory\n\n12. Verify that the Travis env variables have been added.\n\n13. Confirm the build completed successfully on Travis-CI and verify that the files were pushed to your build repo’s ci-beta branch.\n\n14. For a description of which branches route to which environments, please see the [insights-frontend-starter-app README.md](https://github.com/RedHatInsights/insights-frontend-starter-app/)\n"},863:function(e,n){e.exports="# Loading\n\nContent TBD\n\n[Google Doc](https://docs.google.com/presentation/d/1kfKbl5HtumYiNm-ubJxxP93EqJjfThijEd6n1QIhD60/edit?usp=sharing)\n"},864:function(e,n){e.exports='# UX README :rocket:\n\nThis section is intended to share UXD team standards and patterns that relate to Insights and Cloud Services. The audience is UXers and Devs on this project who are seeking to know the "standard" UX pattern for a feature or element.\n\nGot a question? Reach out on #insights-uxd on Slack.\n\n## Editing and adding to these docs\n\nUXD team can and should add more standards and docs, as well as edit the ones that are there.\n\n### Editing :pencil:\n\nIf you are not familiar/comfortable with git, you can edit documents directly on github.\nUsing the file structure on github, navigation to "src/docs/uxd"\n\n![Github path](https://github.com/katierik/insights-frontend-storybook/blob/master/src/docs/uxd/img/githubUXDPath.jpg?raw=true)\n\nOpen the topic you want to edit. Then click on the "DOC.md". This opens the markdown file to view.\nFrom there, click on the "Edit" pencil.\n\n![Markdown file open on github](https://github.com/katierik/insights-frontend-storybook/blob/master/src/docs/uxd/img/githubEdit.jpg?raw=true)\n\nAnd then you should edit your stuff (use markdown!). It can be helpful to write it in markdown ahead of time and then copy-paste in if you have a lot to say.\n\nWhen you\'re done, write some notes about what you changed, create a branch, and create a pull request!\n\n![Where to edit and also where to write comments](https://github.com/katierik/insights-frontend-storybook/blob/master/src/docs/uxd/img/githubNewPR.jpg?raw=true)\n\n**What about images?**\n\n[May be revised] If you want images, you\'ll need to upload them. Each of the topic pages should have an "img" folder. Open that folder for the appropriate topic and upload the image file(s).\n\n![Pointing out the upload button](https://github.com/katierik/insights-frontend-storybook/blob/master/src/docs/uxd/img/githubUploadFile.jpg?raw=true)\n\nTo reference these images, copy the image address from github (there is absolutely a better way to do this, but TBD)\n\n### Editing - with git\n\nSame deal, same locations, just use git commands.\n\nFollow the directions on the main readme for how to use Storybook.\n\n### Adding new topics :star:\n\nYou could do this without cloning etc, but it is probably easier to clone the repo and do this locally.\n\nTo add a new topic, you need to do a couple things:\n\n1. Create a folder with the name of the topics in the "docs/uxd" directory (see editing instructions)\n2. Put a DOC.md file in it (duplicate another, or from scratch)\n3. Open the "stories/uxd/uxd.stories.js" file\n4. Add a new import line: "import [TopicName]Doc from \'../../docs/uxd/[TopicName]/DOC.md\';"\n5. Add a story to the list: ".add(\'[Topic title]\', doc([TopicName]Doc))" (Try to keep the list alphabetical)\n6. Write your content in the "DOC.md" file you created for that topic!\n'},865:function(e,n){e.exports="# Alerts and Notifications\n\nContent TBD\n\n[Google Doc](https://docs.google.com/document/d/1z-xPgVYb3R7tqrxAWSiEsOwB_qjpeWgLrKKShVylguE/edit?usp=sharing)\n"},866:function(e,n){e.exports="# Language\n\n## Terminology\n\n[Google sheet](https://docs.google.com/spreadsheets/d/11ldkJhVT_m1ApFoJ2_kfX8NfLOQfTGGiL-rdh0bDER0/edit?usp=sharing)\n\n## Date and time standards\n\n[Google doc](https://docs.google.com/document/d/1hivSfe48717VhlLRtjyqReS5twbSLuPC6MISJt3MTG4/edit?usp=sharing)\n"},867:function(e,n){e.exports="# Toolbars & Filters\n\nContent TBD\n\n[Google Doc](https://docs.google.com/document/d/1Uq1cmLxrUBhhDZrUe7KIdesLKORT2IF5M13XqCJ6yYY/edit?usp=sharing)\n"},868:function(e,n){e.exports="# Empty States\n\nTBD\n"},875:function(e,n,t){t(346),t(876),e.exports=t(877)},877:function(e,n,t){"use strict";t.r(n),function(e){var n=t(2),o=t.n(n),a=t(647),i=t(827),r=t(13),s=t(832),l=t(651),c=t.n(l),p=(t(1082),t(1150)),d=t(1166),h=t(1200),u=t(1202),m=t(1204),b=t(1206),g=t(1211),f=t(1213);Object(l.setDefaults)({sectionOptions:{useTheme:!1,showSource:!0,allowSourceToggling:!1,showPropTables:!1,allowPropTablesToggling:!0}}),Object(r.setAddon)(c.a),Object(s.setOptions)({name:"cloud.redhat.com",url:"https://github.com/RedHatInsights",addonPanelInRight:!0,sortStoriesByKind:!1}),Object(r.addDecorator)(function(e){return o.a.createElement(a.Provider,{store:Object(i.a)().getStore()},o.a.createElement("div",{style:{padding:"15px"}},e()))}),Object(r.configure)(function(){m.keys().forEach(m),u.keys().forEach(u),p.keys().forEach(p),g.keys().forEach(g),h.keys().forEach(h),d.keys().forEach(d),b.keys().forEach(b),f.keys().forEach(f)},e)}.call(this,t(41)(e))}},[[875,2,4]]]);
//# sourceMappingURL=iframe.409b03d54d85aa879e0f.bundle.js.map